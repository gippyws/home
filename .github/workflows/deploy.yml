name: Deploy to SiteGround 🚀

on:
  push:
    branches:
      - main # Trigger the workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      # ----------------------------------------------------
      # ⚠️ IMPORTANT: Uncomment and configure if your project needs building 
      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      # - name: Install Dependencies
      #   run: npm install
      # - name: Build Project
      #   run: npm run build
      # ----------------------------------------------------

      # ----------------------------------------------------
      # 1. SETUP SSH AGENT (Loads key + passphrase)
      # This step is CRITICAL for SiteGround keys with a passphrase.
      # ----------------------------------------------------
      - name: Start SSH Agent and Load Key
        uses: webfactory/ssh-agent@v0.5.1 
        with:
          ssh-private-key: ${{ secrets.SG_PRIVATE_KEY }}
          passphrase: ${{ secrets.SG_KEY_PASSPHRASE }}
          
      # ----------------------------------------------------
      # 2. Add SiteGround's Host Key to the runner's known hosts
      # Prevents connection errors on the first attempt.
      # ----------------------------------------------------
      - name: Add SiteGround to known_hosts
        run: ssh-keyscan -p 18765 -H ${{ secrets.SG_HOST }} >> ~/.ssh/known_hosts

      # ----------------------------------------------------
      # 3. DEPLOY using rsync over SSH
      # rsync is efficient, sending only changed files.
      # ----------------------------------------------------
      - name: 📦 Deploy via Rsync over SSH
        run: |
          # Define variables for clarity
          SOURCE_DIR="./"  # If you build, change this to your build folder (e.g., 'dist/')
          TARGET_DIR="www/gippywebservcies.com.au/public_html" 
          HOST="${{ secrets.SG_USERNAME }}@${{ secrets.SG_HOST }}"

          # Execute rsync command: -avz for archive mode/compression, --delete removes
          # files on the server that don't exist in the repo.
          # -e "ssh -p 18765" specifies SiteGround's custom port.
          rsync -avz --delete \
            -e "ssh -p 18765" \
            "${SOURCE_DIR}" \
            "${HOST}:${TARGET_DIR}"

      - name: ✅ Deployment Successful
        run: echo "Deployment to SiteGround finished!"
